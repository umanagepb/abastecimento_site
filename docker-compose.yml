version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: abastecimento_db
    environment:
      POSTGRES_DB: abastecimento
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      # Alternative: Use trust method (NOT RECOMMENDED for production)
      # POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./abastecimento_api
      dockerfile: Dockerfile
    container_name: abastecimento_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:5004
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ConnectionStrings__ConnectionString=XpoProvider=Postgres;User ID=postgres;Password=${DB_PASSWORD:-postgres};Server=postgres;Port=5432;Database=abastecimento
      - Authentication__Jwt__Audience=${JWT_AUDIENCE:-https://your-domain.com}
      - Authentication__Jwt__IssuerSigningKey=${JWT_SIGNING_KEY:-0a660ff6-8609-42b1-ba04-b3babc54a13a}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=abastecimento
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    ports:
      - "5004:5004"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - default

  web:
    build:
      context: ./abastecaonline
      dockerfile: Dockerfile
    container_name: abastecimento_web
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__ConnectionString=XpoProvider=Postgres;User ID=postgres;Password=${DB_PASSWORD:-postgres};Server=postgres;Port=5432;Database=abastecimento
      - Authentication__Jwt__Audience=${JWT_AUDIENCE:-https://your-domain.com}
      - Authentication__Jwt__IssuerSigningKey=${JWT_SIGNING_KEY:-0a660ff6-8609-42b1-ba04-b3babc54a13a}
      - ApiUrl=${API_URL:-http://api:5004}
    ports:
      - "5003:5003"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  default:
    name: abastecimento_network