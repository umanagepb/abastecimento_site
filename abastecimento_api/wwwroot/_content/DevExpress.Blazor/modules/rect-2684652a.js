import{P as t,N as e}from"./point-9c6ab88a.js";class i{constructor(t,e){this.widthField=t,this.heightField=e}get width(){return this.widthField}get height(){return this.heightField}}i.Empty=new i(0,0);class h{constructor(t,e,i,h){this.xField=t,this.yField=e,this.widthField=i,this.heightField=h}get topLeft(){return new t(this.x,this.y)}get topRight(){return new t(this.x+this.width,this.y)}get bottomLeft(){return new t(this.x,this.y+this.height)}get bottomRight(){return new t(this.x+this.width,this.y+this.height)}get x(){return this.xField}get y(){return this.yField}get width(){return this.widthField}get height(){return this.heightField}get isEmpty(){return e.lessThanOrClose(this.width,0)||e.lessThanOrClose(this.height,0)}get left(){return this.x}get top(){return this.y}get right(){return this.isEmpty?Number.NEGATIVE_INFINITY:this.x+this.width}get bottom(){return this.isEmpty?Number.NEGATIVE_INFINITY:this.y+this.height}get size(){return new i(this.width,this.height)}static create(t,e){return new h(t.x,t.y,e.width,e.height)}static createFromPoints(t,e){return new h(Math.min(t.x,e.x),Math.min(t.y,e.y),Math.abs(t.x-e.x),Math.abs(t.y-e.y))}}h.Empty=new h(0,0,0,0);class s{static fromDomRect(t){return new h(t.left,t.top,t.width,t.height)}static offset(t,e){return new h(t.x+e.x,t.y+e.y,t.width,t.height)}static areSame(t,i){return e.areClose(t.x,i.x)&&e.areClose(t.y,i.y)&&e.areClose(t.width,i.width)&&e.areClose(t.height,i.height)}static intersectsWith(t,e){return!t.isEmpty&&!e.isEmpty&&(e.left<=t.right&&e.right>=t.left&&e.top<=t.bottom&&e.bottom>=t.top)}static intersect(t,e){if(!s.intersectsWith(t,e))return h.Empty;const i=Math.max(t.left,e.left),r=Math.max(t.top,e.top),n=Math.max(Math.min(t.right,e.right)-i,0),a=Math.max(Math.min(t.bottom,e.bottom)-r,0);return new h(i,r,n,a)}static contains(t,e){return!t.isEmpty&&(e.x>=t.x&&e.x-t.width<=t.x&&e.y>=t.y&&e.y-t.height<=t.y)}static parse(t){const e=t.split(",");if(4!==e.length)throw new Error("incorrect parameters number");return new h(parseFloat(e[0]),parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]))}}export{s as R,i as S,h as a};
