import{D as t}from"./dom-9e6f7067.js";import{D as e}from"./data-qa-utils-8be7c726.js";const n=100;var i,o;!function(t){t[t.None=0]="None",t[t.Click=1]="Click",t[t.DblClick=2]="DblClick",t[t.Dragging=4]="Dragging"}(i||(i={})),function(t){t[t.Stopped=0]="Stopped",t[t.WaitingForDragging=1]="WaitingForDragging",t[t.Dragging=2]="Dragging"}(o||(o={}));class r extends CustomEvent{constructor(t){super(r.eventName,{detail:t,bubbles:!0,composed:!1,cancelable:!0})}}r.eventName="dxpointerdragstart";class s extends CustomEvent{constructor(t){super(s.eventName,{detail:t,bubbles:!0,composed:!1,cancelable:!0})}}s.eventName="dxpointerdragstop";class a extends Event{constructor(){super(a.eventName,{bubbles:!0,composed:!1,cancelable:!0})}}a.eventName="dxpointerdatgcancel";class c extends CustomEvent{constructor(t){super(c.eventName,{detail:t,bubbles:!0,composed:!1,cancelable:!0})}}c.eventName="dxclick";class d extends CustomEvent{constructor(t){super(d.eventName,{detail:t,bubbles:!0,composed:!1,cancelable:!0})}}d.eventName="dxdblclick";const h=document.createElement("template");h.innerHTML="<slot />";class l extends HTMLElement{constructor(){super(),this.preventClickEvent=!1,this.boundOnPointerDownHandler=this.onPointerDown.bind(this),this.boundOnPointerMoveHandler=this.onPointerMove.bind(this),this.boundOnPointerUpHandler=this.onPointerUp.bind(this),this.boundOnPointerCancelHandler=this.onPointerCancel.bind(this),this.boundOnDraggingKeyDownHandler=this.onDraggingKeyDown.bind(this),this.boundOnGotPointerCaptureHandler=this.onGotPointerCapture.bind(this),this.boundOnPointerClickHandler=this.onPointerClick.bind(this),this.boundOnPointerDblClickHandler=this.onPointerDblClick.bind(this),this._isInitialized=!1,this._handlePointerEventsMode=i.None,this.pointerInteractionState=o.Stopped,this.prepareComponent()}get isInitialized(){return this._isInitialized}initializeComponent(){this.addPointerEventsSubscriptions()}afterInitialize(){}disconnectedCallback(){this._isInitialized=!1,e.removeLoaded(this),this.removePointerEventsSubscriptions(),this.disposeComponent()}disposeComponent(){this.removePointerEventsSubscriptions()}getContentTemplate(){return h}componentContentChanged(){this.initializeComponent(),this._isInitialized=!0,e.setLoaded(this),this.afterInitialize()}prepareComponent(){this.prepareShadowDom()}prepareShadowDom(){const t=this.attachShadow({mode:"open"});t.appendChild(this.getContentTemplate().content.cloneNode(!0));t.querySelector("slot").addEventListener("slotchange",this.componentContentChanged.bind(this))}static preventDefaultBrowserBehaviour(t){t.cancelable&&t.preventDefault()}onGotPointerCapture(t){if(!this.pointerDownContext||!this.pointerDownContext.isLongTap)return;const e=t.target;e&&e.hasPointerCapture(t.pointerId)&&e.releasePointerCapture(t.pointerId)}get handlePointerEventsMode(){return this._handlePointerEventsMode}set handlePointerEventsMode(t){this._handlePointerEventsMode=t,this.onHandlePointerEventsModeChanged()}get handlePointerEventsTarget(){return this}get handlePointerEventsDelay(){return 500}onHandlePointerEventsModeChanged(){this.isInitialized&&(this.removePointerEventsSubscriptions(),this.addPointerEventsSubscriptions())}addPointerEventsSubscriptions(){const t=this.handlePointerEventsTarget;t&&(t.addEventListener("click",this.boundOnPointerClickHandler),t.addEventListener("dblclick",this.boundOnPointerDblClickHandler),t.addEventListener("pointerdown",this.boundOnPointerDownHandler),t.addEventListener("gotpointercapture",this.boundOnGotPointerCaptureHandler))}removePointerEventsSubscriptions(){const t=this.handlePointerEventsTarget;t&&(t.removeEventListener("click",this.boundOnPointerClickHandler),t.removeEventListener("dblclick",this.boundOnPointerDblClickHandler),t.removeEventListener("pointerdown",this.boundOnPointerDownHandler),t.removeEventListener("gotpointercapture",this.boundOnGotPointerCaptureHandler))}onPointerDown(e){var n;this.pointerDownContext={source:e,isTouch:"touch"===e.pointerType,isLongTap:!1},0!=(this.handlePointerEventsMode&i.Dragging)?0===e.button&&(this.pointerInteractionState=o.WaitingForDragging,this.pointerDownContext.isTouch&&(this.touchDeviceInteractionTimer=setTimeout(this.onTouchDeviceInteractionTimerTimeout.bind(this),this.handlePointerEventsDelay)),this.preventClickEvent=!1,document.addEventListener("pointermove",this.boundOnPointerMoveHandler),document.addEventListener("pointerup",this.boundOnPointerUpHandler),document.addEventListener("pointercancel",this.boundOnPointerCancelHandler),document.addEventListener("keydown",this.boundOnDraggingKeyDownHandler),t.addClassName(document.body,"dx-prevent-selection")):e.shiftKey&&(null===(n=null===document||void 0===document?void 0:document.getSelection())||void 0===n||n.removeAllRanges())}onPointerMove(t){var e;this.pointerInteractionState!==o.Stopped&&this.pointerInteractionState===o.WaitingForDragging&&((null===(e=this.pointerDownContext)||void 0===e?void 0:e.isTouch)?this.isDistanceExceedLimit(t)&&this.stopPointerInteraction():this.isDistanceExceedLimit(t)&&this.tryStartPointerInteraction())}onPointerCancel(t){if(this.pointerInteractionState===o.Stopped)return;this.stopPointerInteraction();const e=new a;this.dispatchEvent(e)}onDraggingKeyDown(t){if(this.pointerInteractionState!==o.Stopped&&"Escape"===t.key){this.stopPointerInteraction();const t=new a;this.dispatchEvent(t)}}onPointerUp(t){if(this.pointerDownContext&&this.pointerInteractionState===o.Dragging){const e=new s({source:t,isTouch:this.pointerDownContext.isTouch,isLongTap:this.pointerDownContext.isLongTap});this.dispatchEvent(e),this.pointerDownContext.isTouch||(this.preventClickEvent=!0)}this.stopPointerInteraction(),this.releasePointerCapture(t.pointerId)}onPointerClick(t){if(0==(this.handlePointerEventsMode&i.Click))return;if(this.preventClickEvent||0!==t.button||this.isDistanceExceedLimit(t))return;const e=new c({source:t,isTouch:!!this.pointerDownContext&&this.pointerDownContext.isTouch});this.dispatchEvent(e),this.preventClickEvent=!1}onPointerDblClick(t){if(0==(this.handlePointerEventsMode&i.DblClick))return;if(0!==t.button||this.isDistanceExceedLimit(t))return;const e=new d({source:t,isTouch:!!this.pointerDownContext&&this.pointerDownContext.isTouch});this.dispatchEvent(e)}tryStartPointerInteraction(){l.pointerInteractionElement?this.pointerInteractionState=o.Stopped:this.startPointerInteraction()}startPointerInteraction(){this.pointerInteractionState=o.Dragging,l.pointerInteractionElement=this,document.addEventListener("touchmove",l.preventDefaultBrowserBehaviour,{passive:!1}),this.raisePointerDragStartEvent()}stopPointerInteraction(){this.clearTouchDeviceInteractionTimer(),this.pointerInteractionState===o.Dragging&&(l.pointerInteractionElement=null,this.pointerInteractionState=o.Stopped),document.removeEventListener("touchmove",l.preventDefaultBrowserBehaviour),document.removeEventListener("pointermove",this.boundOnPointerMoveHandler),document.removeEventListener("pointerup",this.boundOnPointerUpHandler),document.removeEventListener("pointercancel",this.boundOnPointerCancelHandler),document.removeEventListener("keydown",this.boundOnDraggingKeyDownHandler),t.removeClassName(document.body,"dx-prevent-selection")}clearTouchDeviceInteractionTimer(){this.touchDeviceInteractionTimer&&(clearTimeout(this.touchDeviceInteractionTimer),delete this.touchDeviceInteractionTimer)}onTouchDeviceInteractionTimerTimeout(){this.pointerInteractionState===o.WaitingForDragging&&this.pointerDownContext&&this.pointerDownContext.isTouch&&(this.pointerDownContext.isLongTap=!0,this.tryStartPointerInteraction(),this.clearTouchDeviceInteractionTimer())}isDistanceExceedLimit(t){return!this.pointerDownContext||(Math.abs(this.pointerDownContext.source.clientX-t.clientX)>4||Math.abs(this.pointerDownContext.source.clientY-t.clientY)>4)}raisePointerDragStartEvent(){if(!this.pointerDownContext)return;const t=new r({source:this.pointerDownContext.source,isTouch:this.pointerDownContext.isTouch,isLongTap:this.pointerDownContext.isLongTap});this.dispatchEvent(t)}}l.pointerInteractionElement=null;export{l as D,i as H,r as P,n as T,s as a,a as b,c,d};
