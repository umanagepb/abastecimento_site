{
  "ConnectionStrings": {
    "ConnectionString": "XpoProvider=Postgres;User ID=postgres;Password=postgres;Server=localhost;Port=5432;Database=abastecimento",
    "EasyTestConnectionString": "Integrated Security=SSPI;Pooling=false;Data Source=(localdb)\\mssqllocaldb;Initial Catalog=AbastecimentoEasyTest"
  },
  "Authentication": {
    "Jwt": {
       // If "Issuer" is set to "XafSecurity", XAF uses the name identifier claim (ClaimTypes.NameIdentifier) from the token to find and assign the corresponding XAF AuthenticatedUser automatically.
       // Alternatively, use AddExternalAuthentication<HttpContextPrincipalProvider>(options) to assign AuthenticatedUser from Principal in the options.Events.OnAuthenticated action.
       "Issuer": "XafSecurity",
       "Audience": "http://localhost:4200",
       "IssuerSigningKey": "0a660ff6-8609-42b1-ba04-b3babc54a13a" // Generate and store the secret key here.
    },
    // fill the following settings from Azure portal https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-create-new-tenant
    "AzureAd": {
      "Instance": "https://login.microsoftonline.com/",
      // Enter your tenant domain, for example, contoso.onmicrosoft.com
      "Domain": "",
      // Enter 'common', or 'organizations' or the Tenant Id obtained from the Azure portal. Select 'Endpoints' from the 'App registrations' blade and use the GUID in any of the URLs), for example, da41245a5-11b3-996c-00a8-4d99re19f292
      "TenantId": "organizations",
      // Enter the Client Id (application ID obtained from the Azure portal), for example, ba74781c2-53c2-442a-97c2-3d60re42f403
      "ClientId": "[Configure ClientId in appsettings.json before use.]",
      "CallbackPath": "/ms_auth"
    }
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information",
      "DevExpress.ExpressApp": "Information"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "EndPoints": {
      "Https": {
        "Url": "https://*:5004",
	"Certificate": {
          "Path": "/etc/letsencrypt/live/abastecimento.umanage.tech/fullchain.pem",
          //"Password": ""
          "KeyPath": "/etc/letsencrypt/live/abastecimento.umanage.tech/privkey.pem"
        }
      }
    }
  },
}
