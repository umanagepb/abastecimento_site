import{R as t,s as e,p as i}from"./dom-utils-2919d18e.js";import{D as s}from"./dom-95153cd1.js";import{E as n}from"./eventRegister-fb9b0e47.js";import{D as o}from"./dx-html-element-base-1a4cd1ce.js";import"./browser-a3d50e79.js";import"./_tslib-158249d5.js";import"./data-qa-utils-8be7c726.js";import"./eventhelper-8570b930.js";class a extends o{constructor(){super(),this.isAnimating=!1,this._expanded=!0,this._allowAnimation=!1,this.events=new n(this)}get expanded(){return this._expanded}set expanded(t){this._expanded!==t&&(this._expanded=t,this.applyExpandedStateToElements())}get allowAnimation(){return this._allowAnimation}set allowAnimation(t){this._allowAnimation!==t&&(this._allowAnimation=t)}initializeComponent(){super.initializeComponent(),this.applyExpandedStateToElements()}static get observedAttributes(){return["expanded-state","allow-animation"]}attributeChangedCallback(t,e,i){switch(t){case"expanded-state":this.expanded="true"===(null==i?void 0:i.toLowerCase());break;case"allow-animation":this.allowAnimation=null!==i}}getBodyElement(){return this.querySelector(".dxbl-group-body")}applyExpandedStateToElements(){var t;const e=this.getBodyElement(),i=this.expanded;if(e)if(this.isInitialized)if(this.allowAnimation){const s=this.token,n=this.getGroupContentStartHeight(e,i);this.classList.remove("transition"),s&&(e.style.height=n+"px");const o=this.getGroupContentEndHeight(e,this.expanded);if(this.prepareGroupElementsForAnimation(this.expanded,0),null===(t=this.token)||void 0===t||t.dispose(),n!==o){const t=()=>{this.token.dispose(),this.token=null,this.onAnimationComplete()};this.startAnimation(e,n,o,(()=>{t()}))}}else this.setGroupElementDisplay(e,i);else this.setGroupElementDisplay(e,this.expanded)}startAnimation(e,i,s,n){this.isAnimating=!0,i!==s?(this.token=this.events.attachEvent(e,"transitionend",n),t((()=>{this.isAnimating&&(this.classList.add("transition"),e.style.height=s+"px")}))):n()}getGroupContentStartHeight(t,e){return e?this.getClearClientHeight(t):t.offsetHeight}getGroupContentEndHeight(t,e){if(!e)return 0;const i=t,s=this.getClearClientHeight(t),n=this.getElementDisplay(i,!1);t.style.height="",this.setElementDisplay(i,!0);const o=this.getClearClientHeight(t);return this.setElementDisplay(i,n),t.style.height=s+"px",o}getElementDisplay(t,e){if(e){const e=s.getCurrentStyle(t);if(e)return"none"!==e.display}return"none"!==t.style.display}setElementDisplay(t,e){t&&(t.style.display=e?"":"none")}getClearClientHeight(t){return this.getElementOffsetHeight(t)}getElementOffsetHeight(t){return"svg"===t.tagName?t.getBoundingClientRect().height:t.offsetHeight}onAnimationComplete(){const t=this.getBodyElement();t&&(this.setGroupElementDisplay(t,this.expanded),this.classList.remove("transition"),e(t,{overflow:"",height:"",width:""}),this.dispatchEvent(new Event("change",{bubbles:!0})))}get value(){return Boolean(this.expanded).toString()}prepareGroupElementsForAnimation(t,e){const i=this.getBodyElement();if(i)if(i.style.overflow="hidden",t)i.style.height=this.getClearClientHeight(i)+"px",this.setGroupElementDisplay(i,!0);else{const t=i.offsetHeight+e;t>=0&&this.setOffsetHeight(i,t,null)}}setGroupElementDisplay(t,e){null!=t&&this.setElementDisplay(t,e)}setOffsetHeight(t,e,n){n||(n=s.getCurrentStyle(t));let o=e-s.pxToInt(n.marginTop)-s.pxToInt(n.marginBottom);o-=i(t,n),o>-1&&(t.style.height=o+"px")}}customElements.define("dxbl-group-control",a);const l={loadModule:function(){}};export{a as DxGroupControl,l as default};
