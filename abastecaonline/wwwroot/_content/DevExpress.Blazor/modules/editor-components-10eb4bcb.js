import{a as t}from"./_tslib-158249d5.js";import{D as e}from"./dx-ui-element-de378e9d.js";import{D as s,S as n}from"./simpleevent-84045703.js";import{L as i}from"./logicaltreehelper-15991dcb.js";import{L as r,D as a}from"./layouthelper-4b19d191.js";import{E as o}from"./eventhelper-8570b930.js";import{C as l}from"./custom-events-helper-18f7786a.js";import{D as d,B as u,a as c,G as h}from"./button-a2ba68b9.js";import{n as p}from"./nameof-factory-64d95f5b.js";import{$ as v,r as m}from"./lit-element-b0a6fcba.js";import{e as b}from"./property-d3853089.js";import{n as f}from"./custom-element-bd7061f2.js";import{B as y}from"./browser-a3d50e79.js";import{R as x}from"./rafaction-bba7928b.js";import"./lit-element-base-af247167.js";import"./data-qa-utils-8be7c726.js";import"./rect-7fc5c2ef.js";import"./point-9c6ab88a.js";import"./locker-c40478e6.js";class g extends CustomEvent{constructor(t,e){super(g.eventName,{detail:{oldFocused:t,newFocused:e},bubbles:!0,composed:!0,cancelable:!0})}}g.eventName="focusmanager.focusout";class w extends CustomEvent{constructor(t,e){super(w.eventName,{detail:{oldFocused:t,newFocused:e},bubbles:!0,composed:!0,cancelable:!1})}}w.eventName="focusmanager.focusin";class I{static get activeElement(){return I._activeElement}static set activeElement(t){const e=I.activeElement;I.activeElement&&I.activeElement.dispatchEvent(new g(e,t)),I._activeElement=t,I.activeElement&&I.activeElement.dispatchEvent(new w(e,t))}static initialize(){window.addEventListener("focusin",(()=>I.handleChangeFocus()),{capture:!0,passive:!0}),window.addEventListener("focusout",(()=>I.handleChangeFocus()),{capture:!0,passive:!0}),I.activeElement=document.activeElement}static handleChangeFocus(){if(document.activeElement)return I.activeElementUpdateAction.cancel(),void(I.activeElement=document.activeElement);I.activeElementUpdateAction.execute((()=>{I.activeElement=document.activeElement}))}static isFocused(t){return t===I.activeElement}static isFocusWithin(t,e=!1){return e?i.containsElement(t,I.activeElement):r.containsElement(t,I.activeElement)}}I.activeElementUpdateAction=new s,I.initialize();class E{constructor(t){this.editor=t}processKeyDown(t){if(!this.editor.serverFocused)return!1;if("Enter"===t.key&&this.editor.shouldProcessEnter){if(this.editor.acceptDeferredInput())return o.markHandled(t),this.editor.raiseKeyDown(t),!0}return!1}processBeforeInput(t){return!this.editor.serverFocused&&(o.markHandled(t),!0)}processInput(t){return!1}processPointerDown(t){return!1}processPointerUp(t){return!1}processFocusIn(){return!1}processFocusOut(){return!1}syncWithServerState(t,e,s,n){this.editor.setInputText(e,t),this.editor.selectInputText(s,n)}}class k extends E{processFocusOut(){return!!super.processFocusOut()||!!this.editor.inputTextChanged&&(this.editor.raiseTextChanged(this.editor.inputText),!0)}processInput(t){return super.processInput(t)||this.editor.raiseTextChanged(this.editor.inputText),!0}}class S{constructor(t){this.Text=t}}class T extends CustomEvent{constructor(t){super(T.eventName,{detail:new S(t),bubbles:!0,composed:!0,cancelable:!0})}}T.eventName="dxbl-text-input.textinput",l.register(T.eventName,(t=>t.detail));class M extends CustomEvent{constructor(t){super(M.eventName,{detail:t,bubbles:!0,composed:!0,cancelable:!0})}}M.eventName="dxbl-text-input.keydown",l.register(M.eventName,(t=>{const e=t.detail;return{Key:e.key,Code:e.code,CtrlKey:e.ctrlKey,AltKey:e.altKey,ShiftKey:e.shiftKey,MetaKey:e.metaKey}}));class C extends CustomEvent{constructor(t){super(C.eventName,{detail:t,bubbles:!0,composed:!0,cancelable:!0})}}C.eventName="dxbl-text-input.beforeinput",l.register(C.eventName,(t=>{const e=t.detail;return{InputType:e.inputType,Text:e.data}}));class B{constructor(t=null){this.inputText="",this.input=t,this.label=t}setInputText(t){this.inputText=t,this.input&&(this.input.value=t),this.label&&(this.label.innerText=t)}}const D=p();class F extends e{constructor(){super(),this.inputSlotChangedHandler=this.handleInputSlotChange.bind(this),this.slotChangedHandler=this.handleSlotChange.bind(this),this.clearButtonSlotChangedHandler=this.handleClearSlotChange.bind(this),this.focusInHandler=this.handleFocusIn.bind(this),this.focusOutHandler=this.handleFocusOut.bind(this),this.keyDownHandler=this.handleKeyDown.bind(this),this.beforeInputHandler=this.handleBeforeInput.bind(this),this.clearButtonClickHandler=this.handleClearButtonClick.bind(this),this._input=null,this._clearButton=null,this._inputWrapper=new B,this.focused=!1,this._inputTextChanged=!1,this.editText="",this.inputText="",this.serverFocused=!1,this.selectAllOnGotFocus=!1,this.nullTextVisible=!1,this.nullText=null,this.disabled=!1,this.readonly=!1,this.hasClearButton=!1,this.hasDefaultFarButtons=!1,this.hasNearButtons=!1,this.hasFarButtons=!1,this.hasValidationIcon=!1,this.validationIconFar=!1,this.updateInputStrategy()}get input(){return this._input}get inputWrapper(){return this._inputWrapper}get inputStrategy(){return this._inputStrategy}get enabled(){return!this.disabled}get allowInput(){return this.enabled&&!this.readonly&&!!this.input}get inputTextChanged(){return this._inputTextChanged}get shouldProcessEnter(){return!1}acceptDeferredInput(){return!1}get selectionLength(){var t,e,s,n;const i=null!==(e=null===(t=this.input)||void 0===t?void 0:t.selectionStart)&&void 0!==e?e:0,r=null!==(n=null===(s=this.input)||void 0===s?void 0:s.selectionEnd)&&void 0!==n?n:0;return Math.abs(r-i)}get selectionStart(){var t,e,s,n;const i=null!==(e=null===(t=this.input)||void 0===t?void 0:t.selectionStart)&&void 0!==e?e:0,r=null!==(n=null===(s=this.input)||void 0===s?void 0:s.selectionEnd)&&void 0!==n?n:0;return Math.min(i,r)}get selectionEnd(){var t,e,s,n;const i=null!==(e=null===(t=this.input)||void 0===t?void 0:t.selectionStart)&&void 0!==e?e:0,r=null!==(n=null===(s=this.input)||void 0===s?void 0:s.selectionEnd)&&void 0!==n?n:0;return Math.max(i,r)}connectedCallback(){super.connectedCallback(),this.subscribe(),this.updateFocusInIfNeeded()}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribe()}subscribe(){this.addEventListener(w.eventName,this.focusInHandler),this.addEventListener(g.eventName,this.focusOutHandler),this.addEventListener("keydown",this.keyDownHandler),this.addEventListener("beforeinput",this.beforeInputHandler)}unsubscribe(){this.removeEventListener("focusin",this.focusInHandler),this.removeEventListener("focusout",this.focusOutHandler),this.removeEventListener("keydown",this.keyDownHandler),this.removeEventListener("beforeinput",this.beforeInputHandler)}render(){return v`
            ${this.hasNearButtons?this.renderLeftButtonsSlot():null}
            ${this.hasValidationIcon&&!this.validationIconFar?this.renderValidationIconSlot():null}
            ${this.renderDefaultSlot()}
            ${this.renderInputSlot()}
            ${this.hasValidationIcon&&this.validationIconFar?this.renderValidationIconSlot():null}
            ${this.hasClearButton?this.renderClearSlot():null}
            ${this.hasDefaultFarButtons?this.renderDefaultFarButtonsSlot():null}
            ${this.hasFarButtons?this.renderRightButtonsSlot():null}`}renderDefaultSlot(){return v`<slot @slotchange=${this.slotChangedHandler}></slot>`}renderInputSlot(){return v`<slot name="input" class="input-slot" @slotchange=${this.inputSlotChangedHandler}></slot>`}renderClearSlot(){return v`<slot name="clear" class="clear-slot" @slotchange=${this.clearButtonSlotChangedHandler}></slot>`}renderDefaultFarButtonsSlot(){return v`<slot name="default-far-buttons"></slot>`}renderValidationIconSlot(){return v`<slot name="validation"></slot>`}renderLeftButtonsSlot(){return v`<slot name="left-buttons" class="left-buttons-slot"></slot>`}renderRightButtonsSlot(){return v`<slot name="right-buttons" class="right-buttons-slot"></slot>`}handleInputSlotChange(t){const e=t.target.assignedNodes();this.assignInput(e[0])}handleSlotChange(t){}handleClearSlotChange(t){const e=t.target.assignedNodes();this.assignClearButton(e.find((t=>t instanceof d)))}assignClearButton(t){this._clearButton&&this._clearButton.removeEventListener(u.eventName,this.clearButtonClickHandler),this._clearButton=t,this._clearButton&&this._clearButton.addEventListener(u.eventName,this.clearButtonClickHandler)}handleClearButtonClick(t){this.clearInputState()}clearInputState(){var t;this.setInputText(!1,this.editText),null===(t=this.input)||void 0===t||t.focus()}willUpdate(t){}updated(t){t.has(D("readonly"))&&this.assignReadOnly(this.readonly),t.has(D("enabled"))&&this.assignEnabled(this.enabled),t.has(D("serverFocused"))&&this.processServerFocused(),t.has(D("editText"))&&this.setEditText(this.nullTextVisible,this.editText),(t.has(D("nullTextVisible"))||t.has(D("nullText")))&&this.assignNullText(this.nullTextVisible,this.nullText)}createInputStrategy(){return new k(this)}updateInputStrategy(){this._inputStrategy=this.createInputStrategy()}assignNullText(t,e){this.input&&(this.nullTextVisible&&this.nullText?this.input.placeholder=e:this.input.removeAttribute("placeholder"))}selectAll(){this.input&&I.isFocused(this.input)&&this.input.select()}setEditText(t,e){this.inputText!==e&&this.setInputText(t,e)}setInputText(t,e){this.inputText=this.nullTextVisible?"":e,this._inputTextChanged=!1,this.inputWrapper.setInputText(this.inputText)}selectInputText(t,e){this.input&&this.input.setSelectionRange(t,e)}updateInputText(){var t,e;this.inputText=null!==(e=null===(t=this.input)||void 0===t?void 0:t.value)&&void 0!==e?e:"",this._inputTextChanged=!0}assignInput(t){this.input&&this.unsubscribeInput(),this._input=t,this.initializeInput(),this.input&&this.subscribeInput()}initializeInput(){this._inputWrapper=new B(this.input),this.setInitialInputText(),this.assignNullText(this.nullTextVisible,this.nullText),this.assignReadOnly(this.readonly),this.assignEnabled(this.enabled)}setInitialInputText(){this.setInputText(this.nullTextVisible,this.inputText)}unsubscribeInput(){}subscribeInput(){}raiseKeyDown(t){this.dispatchEvent(new M(t))}raiseTextChanged(t){this._inputTextChanged=!1,this.dispatchEvent(new T(t))}handleKeyDown(t){this.inputStrategy.processKeyDown(t)}handleBeforeInput(t){this.inputStrategy.processBeforeInput(t)}handleFocusIn(t){i.containsElement(this,t.detail.oldFocused)&&i.containsElement(this,t.detail.newFocused)||i.containsElement(this,t.detail.newFocused)&&this.processFocusIn()}processFocusIn(){this.focused||(this.focused=!0,this.raiseFocusIn(),this.inputStrategy.processFocusIn())}raiseFocusIn(){this.dispatchEvent(new Event("dxbl-text-input.focusin",{composed:!0,bubbles:!0}))}handleFocusOut(t){i.containsElement(this,t.detail.oldFocused)&&i.containsElement(this,t.detail.newFocused)||i.containsElement(this,t.detail.newFocused)||this.processFocusOut()}processFocusOut(){this.focused&&(this.focused=!1,this.processFocusOut(),this.raiseFocusOut(),this.inputStrategy.processFocusOut())}raiseFocusOut(){this.dispatchEvent(new Event("dxbl-text-input.focusout",{composed:!0,bubbles:!0}))}isSelectAll(){return this.selectionLength>0&&this.selectionLength===this.inputText.length}assignReadOnly(t){this.input&&(this.input.readOnly=t)}assignEnabled(t){this.input&&(this.input.disabled=!t)}processServerFocused(){if(!this.serverFocused)return void this.setInputText(this.nullTextVisible,this.editText);const t=0===this.selectionLength?this.selectionStart:null;this.setInputText(this.nullTextVisible,this.editText),this.selectAllOnGotFocus?this.selectAll():t&&this.selectInputText(t,t)}updateFocusInIfNeeded(){I.isFocusWithin(this)&&this.processFocusIn()}}var O;t([b({type:String,attribute:"edit-text"})],F.prototype,"editText",void 0),t([b({type:String,reflect:!1})],F.prototype,"inputText",void 0),t([b({type:Boolean,attribute:"server-focused"})],F.prototype,"serverFocused",void 0),t([b({type:Boolean,attribute:"selectall-on-got-focus"})],F.prototype,"selectAllOnGotFocus",void 0),t([b({type:Boolean,attribute:"null-text-visible"})],F.prototype,"nullTextVisible",void 0),t([b({type:String,attribute:"null-text"})],F.prototype,"nullText",void 0),t([b({type:Boolean,attribute:"disabled"})],F.prototype,"disabled",void 0),t([b({type:Boolean,attribute:"readonly"})],F.prototype,"readonly",void 0),t([b({type:Boolean,attribute:"has-clear-button"})],F.prototype,"hasClearButton",void 0),t([b({type:Boolean,attribute:"has-default-far-buttons"})],F.prototype,"hasDefaultFarButtons",void 0),t([b({type:Boolean,attribute:"has-near-buttons"})],F.prototype,"hasNearButtons",void 0),t([b({type:Boolean,attribute:"has-far-buttons"})],F.prototype,"hasFarButtons",void 0),t([b({type:Boolean,attribute:"has-validation-icon"})],F.prototype,"hasValidationIcon",void 0),t([b({type:Boolean,attribute:"validation-icon-far"})],F.prototype,"validationIconFar",void 0);var _;!function(t){t.OnInput="oninput",t.OnLostFocus="onlostfocus"}(_||(_={}));let A=O=class extends F{constructor(){super(...arguments),this.deferredAction=new c(O.defaultDeferredInputDelay),this.inputHandler=this.handleInput.bind(this),this.bindValueMode=O.defaultBindValueMode,this.deferredInput=!1,this.deferredInputDelay=O.defaultDeferredInputDelay}get shouldProcessEnter(){return this.actualBindValueMode===_.OnLostFocus||this.deferredAction.hasAction}get actualBindValueMode(){var t;return null!==(t=this.bindValueMode)&&void 0!==t?t:O.defaultBindValueMode}acceptDeferredInput(){const t=this.shouldProcessEnter;return this.deferredAction.forceExecute(),t}handleInput(t){this.updateInputText(),this.inputStrategy.processInput(t)&&o.markHandled(t)}unsubscribeInput(){super.unsubscribeInput(),this.removeEventListener("input",this.inputHandler)}subscribeInput(){super.subscribeInput(),this.addEventListener("input",this.inputHandler)}updated(t){var e;super.updated(t),t.has("deferred-input")&&this.deferredAction.forceExecute(),t.has("deferred-input-delay")&&(this.deferredAction.forceExecute(),this.deferredAction=new c(null!==(e=this.deferredInputDelay)&&void 0!==e?e:O.defaultDeferredInputDelay))}raiseTextChanged(t){this.actualBindValueMode===_.OnInput&&this.deferredInput?this.deferredAction.execute((()=>super.raiseTextChanged(t))):super.raiseTextChanged(t)}processFocusOut(){super.processFocusOut(),this.acceptDeferredInput()}clearInputState(){super.clearInputState(),this.deferredAction.cancel()}};A.defaultBindValueMode=_.OnLostFocus,A.defaultDeferredInputDelay=500,t([b({type:String,attribute:"bind-value-mode"})],A.prototype,"bindValueMode",void 0),t([b({type:Boolean,attribute:"deferred-input"})],A.prototype,"deferredInput",void 0),t([b({type:Number,attribute:"deferred-input-delay"})],A.prototype,"deferredInputDelay",void 0),A=O=t([f("dxbl-text-input")],A);class H{static get initialized(){return this.initializedEvent}static loadMasksWasmRuntime(){return new Promise(((t,e)=>{const s=document.createElement("script");s.src="_content/DevExpress.Blazor.Server.WebAssembly/dotnet.js",s.onerror=function(t){e(t)},s.onload=function e(){var s;(null===(s=window.MONO)||void 0===s?void 0:s.mono_wasm_runtime_is_ready)?t():window.setTimeout(e,100)},document.body.insertAdjacentElement("beforeend",s)}))}static markLoaded(){H.loaded=!0}static async initializeAsync(){if(!H.loaded&&!H.loading)try{H.loading=!0,await H.loadMasksWasmRuntime(),H.markLoaded(),H.initializedEvent.raise()}finally{H.loading=!1}}}H.initializedEvent=new n,H.loading=!1,H.loaded=!1;class P{constructor(t){this.id=t}static toNumber(t){return null===t?2:t?1:0}static createNumericMaskManager(t,e,s,n,i,r){P.ensureInitialized();const a=P.monoCreateNumericMaskManager(t,e,s,P.toNumber(n),P.toNumber(i),r);return new P(a)}get displayText(){return P.monoGetDisplayText(this.id)}get displaySelectionStart(){return P.monoGetDisplaySelectionStart(this.id)}get displaySelectionEnd(){return P.monoGetDisplaySelectionEnd(this.id)}get isInLocalEditAction(){return P.monoGetIsInLocalEditAction(this.id)}get hasChangedText(){return P.monoGetIsTextChanged(this.id)}setInitialEditText(t){P.monoSetInitialEditText(this.id,t)}getCurrentEditText(){return P.monoGetCurrentEditText(this.id)}insertText(t){P.monoInsertText(this.id,t)}backspace(){return P.monoBackspace(this.id)}delete(){return P.monoDelete(this.id)}cursorToDisplayPosition(t,e){P.monoCursorToDisplayPosition(this.id,t,e)}flushPendingEditActions(){return P.monoFlushPendingEditActions(this.id)}static ensureInitialized(){if(!H.loaded)throw new Error("mono is not initialized");this.initialized||(this.initialized=!0,P.monoCreateNumericMaskManager=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:CreateNumericMaskManager"),P.monoSetInitialEditText=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:SetInitialEditText"),P.monoGetCurrentEditText=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:GetCurrentEditText"),P.monoGetDisplayText=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:GetDisplayText"),P.monoGetDisplaySelectionStart=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:GetDisplaySelectionStart"),P.monoGetDisplaySelectionEnd=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:GetDisplaySelectionEnd"),P.monoGetIsInLocalEditAction=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:GetIsInLocalEditAction"),P.monoGetIsTextChanged=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:GetIsTextChanged"),P.monoInsertText=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:InsertText"),P.monoBackspace=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:Backspace"),P.monoDelete=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:Delete"),P.monoCursorToDisplayPosition=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:CursorToDisplayPosition"),P.monoFlushPendingEditActions=window.Module.mono_bind_static_method("[DevExpress.Blazor.WebAssembly.Masks] MaskWrapper.MaskManagerProvider:FlushPendingEditActions"))}}P.initialized=!1;class W extends E{get maskEditor(){return this.editor}}class N extends W{processKeyDown(t){const e=super.processKeyDown(t);return e||!!this.shouldProcessKeyDown(t)&&(o.markHandled(t),this.editor.raiseKeyDown(t),!0)}processBeforeInput(t){return!!super.processBeforeInput(t)||!t.isComposing&&(o.markHandled(t),this.editor.dispatchEvent(new C(t)),!0)}shouldProcessKeyDown(t){switch(t.key){case"ArrowLeft":case"ArrowRight":case"ArrowUp":case"ArrowDown":return!0;case"a":case"z":return t.ctrlKey}return!1}processPointerUp(t){const e=super.processPointerUp(t);if(e)return e;if(!this.editor.serverFocused)return!0;return this.maskEditor.raiseMaskSelectionChanged(this.maskEditor.inputSelectionStart,this.maskEditor.inputSelectionEnd,this.maskEditor.inputSelectionDirection,this.maskEditor.inputSelectionStart!==this.maskEditor.inputSelectionEnd),!0}syncWithServerState(t,e,s,n){const i=this.editor.isSelectAll()&&this.editor.selectAllOnGotFocus&&this.editor.serverFocused;super.syncWithServerState(t,e,s,n),i&&this.editor.selectAll()}}class z extends W{constructor(t){super(t),this.maskManager=this.createMaskManager(),this.maskManager.setInitialEditText(this.maskEditor.inputText)}createMaskManager(){var t;if("numeric"===this.maskEditor.maskMode)return P.createNumericMaskManager(null!==(t=this.maskEditor.mask)&&void 0!==t?t:"",1103,!0,null,null,"System.Double");throw new Error("unknown mask")}processBeforeInput(t){let e=super.processBeforeInput(t);if(e)return!0;switch(t.inputType){case"insertText":this.maskManager.insertText(t.data),e=!0;break;case"deleteContentBackward":this.maskManager.backspace(),e=!0;break;case"deleteContentForward":this.maskManager.delete(),e=!0}return!!e&&(o.markHandled(t),this.maskEditor.setInputText(this.editor.nullTextVisible,this.maskManager.displayText),this.maskEditor.selectInputText(this.maskManager.displaySelectionStart,this.maskManager.displaySelectionEnd),e)}syncWithServerState(t,e,s,n){super.syncWithServerState(t,e,s,n),this.maskManager.setInitialEditText(t),this.maskManager.cursorToDisplayPosition(s,!1),this.maskManager.cursorToDisplayPosition(n,s===n)}processFocusOut(){return super.processFocusOut()||(this.maskManager.flushPendingEditActions(),this.editor.raiseTextChanged(this.maskManager.getCurrentEditText())),!0}}var L;!function(t){t[t.forward=0]="forward",t[t.backward=1]="backward"}(L||(L={}));class V{constructor(t,e,s,n){this.direction=L.backward,this.selectionStart=t,this.selectionEnd=e,this.forceSelection=n,this.direction=s}}class R extends CustomEvent{constructor(t,e,s,n){super(R.eventName,{detail:new V(t,e,s,n),bubbles:!0,composed:!0,cancelable:!0})}}R.eventName="dxbl-mask-input.selectionchange",l.register(R.eventName,(t=>t.detail));class U{constructor(t){this.deltaY=t}}class G extends CustomEvent{constructor(t){super(G.eventName,{detail:new U(t),bubbles:!0,composed:!0,cancelable:!0})}}G.eventName="dxbl-mask-input.wheel",l.register(G.eventName,(t=>t.detail));let K=class extends F{constructor(){super(...arguments),this.pointerDownHandler=this.handlePointerDown.bind(this),this.pointerUpHandler=this.handlePointerUp.bind(this),this.wheelHandler=this.handleWheel.bind(this),this.monoRuntimeInitializedHandler=this.monoRuntimeInitialized.bind(this),this.maskType="server",this.maskMode="auto",this.mask=null,this.syncSelectionStart=null,this.syncSelectionEnd=null,this.syncId=0}get inputStrategy(){return super.inputStrategy}get input(){return super.input}get inputSelectionStart(){var t;return null!==(t=this.input.selectionStart)&&void 0!==t?t:0}get inputSelectionEnd(){var t;return null!==(t=this.input.selectionEnd)&&void 0!==t?t:0}get inputSelectionDirection(){return"backward"===this.input.selectionDirection?L.backward:L.forward}updated(t){super.updated(t),t.has("maskType")&&this.updateInputStrategy(),t.has("syncId")&&this.syncWithServerState()}connectedCallback(){super.connectedCallback()}disconnectedCallback(){super.disconnectedCallback()}createInputStrategy(){switch(this.maskType){case"client":return H.loaded?new z(this):(H.initializeAsync(),H.initialized.subscribe(this.monoRuntimeInitializedHandler),new N(this));case"server":return new N(this);default:return new k(this)}}monoRuntimeInitialized(){H.initialized.unsubscribe(this.monoRuntimeInitializedHandler),this.updateInputStrategy()}syncWithServerState(){this.inputStrategy.syncWithServerState(this.editText,this.nullTextVisible,this.syncSelectionStart,this.syncSelectionEnd)}handlePointerDown(t){this.allowInput&&this.inputStrategy.processPointerDown(t)}handlePointerUp(t){this.allowInput&&this.inputStrategy.processPointerUp(t)}raiseMaskSelectionChanged(t,e,s,n){this.dispatchEvent(new R(t,e,s,n))}handleWheel(t){this.dispatchEvent(new G(t.deltaY))}processFocusIn(){super.processFocusIn(),this.addEventListener("wheel",this.wheelHandler,{passive:!0}),this.addEventListener("pointerdown",this.pointerDownHandler),h.addEventListener(this,"pointerup",this.pointerUpHandler)}processFocusOut(){super.processFocusOut(),this.removeEventListener("wheel",this.wheelHandler),this.removeEventListener("pointerdown",this.pointerDownHandler),h.removeEventListener(this,"pointerup",this.pointerUpHandler)}};var j;t([b({type:String,attribute:"mask-type"})],K.prototype,"maskType",void 0),t([b({type:String,attribute:"mask-mode"})],K.prototype,"maskMode",void 0),t([b({type:String,attribute:"mask"})],K.prototype,"mask",void 0),t([b({type:Number,attribute:"sync-selection-start"})],K.prototype,"syncSelectionStart",void 0),t([b({type:Number,attribute:"sync-selection-end"})],K.prototype,"syncSelectionEnd",void 0),t([b({type:Number,attribute:"sync-id"})],K.prototype,"syncId",void 0),K=t([f("dxbl-mask-input")],K);let $=j=class extends K{static get styles(){return m`
            slot[name="default-far-buttons"] {
                display: flex;
                flex-direction: ${j.spinButtonsSlotFlexDirection};
            }
        `}static get spinButtonsSlotFlexDirection(){return y.MobileUI?m`row`:m`column`}};$=j=t([f("dxbl-spin-input")],$);let Y=class extends d{};Y=t([f("dxbl-text-input-button")],Y);class q{constructor(t){this.rafAction=new x,this.textArea=null,this.overflowHandler=this.handleOverflow.bind(this),this.underflowHandler=this.handleUnderflow.bind(this),this.keyUpHandler=this.handleKeyUp.bind(this),this._currentOverflow=!1,this.resizeObserver=new ResizeObserver(this.handleResize.bind(this)),this.callback=t}get currentOverflow(){return this._currentOverflow}set currentOverflow(t){this._currentOverflow!==t&&(this._currentOverflow=t,this.raiseOverflowChanged(t))}observe(t){this.textArea=t,t.addEventListener("overflow",this.overflowHandler),t.addEventListener("underflow",this.underflowHandler),q.hasOverflowEvents||(t.addEventListener("keyup",this.keyUpHandler),this.resizeObserver.observe(t))}disconnect(){if(!this.textArea)return;this.rafAction.cancel();const t=this.textArea;this.textArea=null,t.removeEventListener("overflow",this.overflowHandler),t.removeEventListener("underflow",this.underflowHandler),q.hasOverflowEvents||(t.removeEventListener("keyup",this.keyUpHandler),this.resizeObserver.disconnect())}handleOverflow(t){q.hasOverflowEvents=!0,this.currentOverflow=!0}handleUnderflow(t){q.hasOverflowEvents=!0,this.currentOverflow=!1}handleKeyUp(t){this.rafAction.execute((()=>this.detectOverflow()))}raiseOverflowChanged(t){this.callback({hasOverflow:t},this)}detectOverflow(){this.textArea&&(this.currentOverflow=a.isOverflown(this.textArea))}handleResize(t,e){this.rafAction.execute((()=>this.detectOverflow()))}}q.hasOverflowEvents=!1;const J=p();let Q=class extends A{constructor(){super(),this.textAreaOverflowObserver=new q(this.overflowChanged.bind(this)),this.hasOverflow=!1,this.rightPlacement=0}static get styles(){return m`
            :host {
                display: inline-flex;
                position: relative;
            }
            .absolute {
                position: absolute;
            }
            .button-container {
                display: flex;
                top: 0;
                margin: auto
            }
            .validation-container {
                display: flex;
                align-items: flex-start;
            }
        `}connectedCallback(){super.connectedCallback()}disconnectedCallback(){super.disconnectedCallback()}get input(){return super.input}get shouldProcessEnter(){return!1}subscribeInput(){super.subscribeInput();const t=this.input;t&&(this.updateHasOverflow(),this.updateHasClearButton(),this.textAreaOverflowObserver.observe(t))}updateHasOverflow(){const t=this.input;t&&a.setBooleanAttribute(t,"has-overflow",this.hasOverflow)}updateHasClearButton(){const t=this.input;t&&a.setBooleanAttribute(t,"has-clear-button",this.hasClearButton)}unsubscribeInput(){super.subscribeInput(),this.textAreaOverflowObserver.disconnect()}overflowChanged(t,e){this.hasOverflow=t.hasOverflow}updateRightPlacement(){const t=this.input;this.rightPlacement=t?a.getVerticalScrollbarWidth(t):0}willUpdate(t){super.willUpdate(t),t.has(J("hasOverflow"))&&this.updateRightPlacement()}updated(t){super.updated(t),t.has(J("hasOverflow"))&&this.updateHasOverflow(),t.has(J("hasClearButton"))&&this.updateHasClearButton()}needRightButtonsContainer(){return this.hasValidationIcon&&this.validationIconFar||this.hasClearButton}render(){return v`
            ${this.hasValidationIcon&&!this.validationIconFar?this.renderValidationIconSlot():null}
            ${this.renderDefaultSlot()}
            ${this.renderInputSlot()}
            ${this.needRightButtonsContainer()?this.renderRightButtonsContainer():null}`}renderValidationIconSlot(){return v`
            <div class="validation-container">
                ${super.renderValidationIconSlot()}
            </div>`}renderRightButtonsContainer(){return v`
            <div class="button-container absolute" style="right: ${this.rightPlacement}px">
                ${this.hasValidationIcon&&this.validationIconFar?this.renderValidationIconSlot():null}
                ${this.hasClearButton?this.renderClearSlot():null}
            </div>`}};t([b({type:Boolean,attribute:"has-overflow",reflect:!1})],Q.prototype,"hasOverflow",void 0),Q=t([f("dxbl-memo-input")],Q);let X=class extends A{clearInputState(){var t;this.setInputText(!1,""),null===(t=this.input)||void 0===t||t.focus()}setInitialInputText(){this.updateInputText(),super.setInitialInputText()}processServerFocused(){}};X=t([f("dxbl-password-box")],X);const Z=["dxbl-text-input","dxbl-mask-input","dxbl-spin-input","dxbl-text-input-button","dxbl-memo-input","dxbl-password-box"];function tt(){}const et={registeredComponents:Z,init:tt};export{et as default,tt as init,Z as registeredComponents};
