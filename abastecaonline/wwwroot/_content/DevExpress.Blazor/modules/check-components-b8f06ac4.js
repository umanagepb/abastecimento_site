import{a as e}from"./_tslib-158249d5.js";import{L as t}from"./lit-element-base-af247167.js";import{n as a}from"./nameof-factory-64d95f5b.js";import{C as s}from"./custom-events-helper-18f7786a.js";import{e as c}from"./property-d3853089.js";import{n as h}from"./custom-element-bd7061f2.js";import{$ as n}from"./lit-element-b0a6fcba.js";import"./data-qa-utils-8be7c726.js";const l=a();class i{constructor(e){this.checked=e}}class u extends CustomEvent{constructor(e){super(u.eventName,{detail:new i(e),bubbles:!0,composed:!0,cancelable:!0})}}u.eventName="dxbl-radio.checkedChanged",s.register(u.eventName,(e=>e.detail));let r=class extends t{constructor(){super(...arguments),this.changeHandler=this.handleChange.bind(this),this.slotChangedHandler=this.handleSlotChange.bind(this),this.checkInput=null,this._actualValue=!1,this.checked=!1}get actualValue(){return this._actualValue}set actualValue(e){if(this.actualValue===e)return;const t=this._actualValue;this._actualValue=e,this.dispatchEvent(new u(e)),this.requestUpdate(l("actualValue"),t)}render(){return n`
            <slot @slotchange=${this.slotChangedHandler}></slot>
        `}handleSlotChange(e){this.updateCheck(e.target.assignedElements().find((e=>e instanceof HTMLInputElement)))}setCheckValue(e){this.checkInput&&(this.checkInput.checked=e)}handleChange(e){this.checkInput&&(this.actualValue=this.checkInput.checked)}updateCheck(e){this.checkInput&&this.unsubscribeCheck(this.checkInput),this.checkInput=e,this.setCheckValue(this.actualValue),this.checkInput&&this.subscribeCheck(this.checkInput)}unsubscribeCheck(e){e.removeEventListener("change",this.changeHandler)}subscribeCheck(e){e.addEventListener("change",this.changeHandler)}willUpdate(e){e.has(l("checked"))&&(this.actualValue=this.checked)}updated(e){e.has(l("actualValue"))&&this.setCheckValue(this.actualValue)}};e([c({type:Boolean,reflect:!1,state:!0})],r.prototype,"actualValue",null),e([c({type:Boolean,attribute:l("checked")})],r.prototype,"checked",void 0),r=e([h("dxbl-radio")],r);let o=class extends t{createRenderRoot(){return this}};o=e([h("dxbl-radio-group")],o);const d=["dxbl-radio","dxbl-radio-group"];function p(){}const m={registeredComponents:d,init:p};export{m as default,p as init,d as registeredComponents};
